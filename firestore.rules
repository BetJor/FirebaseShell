rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Default rule: Disallow all reads and writes by default.
    // match /{document=**} {
    //   allow read, write: if false;
    // }

    // Allow read and write access to all collections only if the user is authenticated.
    // This is a basic security rule. For a production app, you should implement
    // more granular rules to restrict access based on user roles and document ownership.
    // For example, a user should only be able to edit their own profile, or only
    // an admin should be able to delete certain data.
    match /{document=**} {
      allow read, write: if request.auth != null;
    }

    // Example of more granular rules for the 'actions' collection:
    // match /actions/{actionId} {
    //   // Anyone authenticated can read an action
    //   allow read: if request.auth != null;
    //   // Only the creator of the action can delete it
    //   allow delete: if request.auth.uid == resource.data.creator.id;
    //   // Only the creator or the responsible party can update an action
    //   allow update: if request.auth.uid == resource.data.creator.id || request.auth.uid == resource.data.responsible.id;
    //   // Anyone authenticated can create an action
    //   allow create: if request.auth != null;
    // }
  }
}
