"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_src_app_my-groups_page_tsx",{

/***/ "(app-pages-browser)/./src/services/google-groups-service.ts":
/*!***********************************************!*\
  !*** ./src/services/google-groups-service.ts ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUserGroups: () => (/* binding */ getUserGroups)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-action-client-wrapper */ \"(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js\");\n/* harmony import */ var private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_action_entry_do_not_use__ {\"40f9d3830df56cf592160c8c78157b25fe5a96b17f\":\"getUserGroups\"} */ \nvar getUserGroups = /*#__PURE__*/ (0,private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.createServerReference)(\"40f9d3830df56cf592160c8c78157b25fe5a96b17f\", private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.callServer, void 0, private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.findSourceMapURL, \"getUserGroups\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9nb29nbGUtZ3JvdXBzLXNlcnZpY2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztJQW9Dc0JBLDhCQUFBQSw2RkFBQUEsK0NBQUFBLDhFQUFBQSxVQUFBQSxvRkFBQUEiLCJzb3VyY2VzIjpbIi9ob21lL3VzZXIvc3R1ZGlvL3NyYy9zZXJ2aWNlcy9nb29nbGUtZ3JvdXBzLXNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzZXJ2ZXInO1xuLyoqXG4gKiBAZmlsZU92ZXJ2aWV3IEEgc2VydmljZSBmb3IgaW50ZXJhY3Rpbmcgd2l0aCB0aGUgR29vZ2xlIEFkbWluIFNESyB0byBtYW5hZ2UgZ3JvdXBzLlxuICpcbiAqIC0gZ2V0VXNlckdyb3VwcyAtIEEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIHRoZSBncm91cHMgZm9yIGEgdXNlci5cbiAqIC0gR2V0VXNlckdyb3Vwc0lucHV0IC0gVGhlIGlucHV0IHR5cGUgZm9yIHRoZSBnZXRVc2VyR3JvdXBzIGZ1bmN0aW9uICh1c2VyIElEKS5cbiAqIC0gR2V0VXNlckdyb3Vwc091dHB1dCAtIFRoZSByZXR1cm4gdHlwZSBmb3IgdGhlIGdldFVzZXJHcm91cHMgZnVuY3Rpb24gKGFycmF5IG9mIGdyb3VwcykuXG4gKi9cblxuaW1wb3J0IHsgeiB9IGZyb20gJ3pvZCc7XG5pbXBvcnQgeyBnb29nbGUgfSBmcm9tICdnb29nbGVhcGlzJztcbmltcG9ydCB0eXBlIHsgVXNlckdyb3VwIH0gZnJvbSAnQC9saWIvdHlwZXMnO1xuaW1wb3J0IHsgR29vZ2xlQXV0aCB9IGZyb20gJ2dvb2dsZS1hdXRoLWxpYnJhcnknO1xuaW1wb3J0IHsgZ2V0R29vZ2xlSWRGcm9tRmlyZWJhc2VVaWQgfSBmcm9tICcuL3VzZXItc2VydmljZSc7XG5cbi8vIFRoZSBpbnB1dCBpcyB0aGUgdXNlcidzIHVuaXF1ZSBGaXJlYmFzZSBJRFxuY29uc3QgR2V0VXNlckdyb3Vwc0lucHV0U2NoZW1hID0gei5zdHJpbmcoKS5kZXNjcmliZShcIlRoZSB1c2VyJ3MgdW5pcXVlIEZpcmViYXNlIElELlwiKTtcbmV4cG9ydCB0eXBlIEdldFVzZXJHcm91cHNJbnB1dCA9IHouaW5mZXI8dHlwZW9mIEdldFVzZXJHcm91cHNJbnB1dFNjaGVtYT47XG5cbmNvbnN0IFVzZXJHcm91cFNjaGVtYSA9IHoub2JqZWN0KHtcbiAgaWQ6IHouc3RyaW5nKCkuZGVzY3JpYmUoXCJUaGUgZ3JvdXAncyBwcmltYXJ5IGVtYWlsIGFkZHJlc3Mgb3IgdW5pcXVlIElELlwiKSxcbiAgbmFtZTogei5zdHJpbmcoKS5kZXNjcmliZShcIlRoZSBkaXNwbGF5IG5hbWUgb2YgdGhlIGdyb3VwLlwiKSxcbiAgZGVzY3JpcHRpb246IHouc3RyaW5nKCkub3B0aW9uYWwoKS5kZXNjcmliZShcIkEgYnJpZWYgZGVzY3JpcHRpb24gb2YgdGhlIGdyb3VwLlwiKSxcbiAgdXNlcklkczogei5hcnJheSh6LnN0cmluZygpKS5vcHRpb25hbCgpLmRlc2NyaWJlKCdBbiBhcnJheSBvZiB1c2VyIElEcyBiZWxvbmdpbmcgdG8gdGhlIGdyb3VwLicpLFxufSk7XG5cblxuLy8gVGhlIHJldHVybiB2YWx1ZSBpcyBhbiBhcnJheSBvZiBncm91cHNcbmNvbnN0IEdldFVzZXJHcm91cHNPdXRwdXRTY2hlbWEgPSB6LmFycmF5KFVzZXJHcm91cFNjaGVtYSk7XG5leHBvcnQgdHlwZSBHZXRVc2VyR3JvdXBzT3V0cHV0ID0gei5pbmZlcjx0eXBlb2YgR2V0VXNlckdyb3Vwc091dHB1dFNjaGVtYT47XG5cbi8qKlxuICogUmV0cmlldmVzIHRoZSBncm91cHMgZm9yIGEgZ2l2ZW4gdXNlciBmcm9tIEdvb2dsZSBXb3Jrc3BhY2UuXG4gKiBAcGFyYW0gdXNlcklkIFRoZSB1bmlxdWUgRmlyZWJhc2UgSUQgb2YgdGhlIHVzZXIuXG4gKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byBhbiBhcnJheSBvZiBncm91cHMuXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRVc2VyR3JvdXBzKHVzZXJJZDogR2V0VXNlckdyb3Vwc0lucHV0KTogUHJvbWlzZTxHZXRVc2VyR3JvdXBzT3V0cHV0PiB7XG4gIGNvbnNvbGUubG9nKGBbZ2V0VXNlckdyb3Vwc10gU3RhcnRpbmcgZ3JvdXAgcmV0cmlldmFsIGZvciB1c2VyIElEICR7dXNlcklkfS5gKTtcblxuICBjb25zdCBhZG1pbkVtYWlsID0gcHJvY2Vzcy5lbnYuR1NVSVRFX0FETUlOX0VNQUlMO1xuICBpZiAoIWFkbWluRW1haWwpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJMYSB2YXJpYWJsZSBkJ2VudG9ybiBHU1VJVEVfQURNSU5fRU1BSUwgbm8gZXN0w6AgZGVmaW5pZGEuXCIpO1xuICB9XG4gIFxuICAvLyBHZXQgdGhlIHVzZXIncyBHb29nbGUtc3BlY2lmaWMgSUQgZnJvbSB0aGVpciBGaXJlYmFzZSBVSURcbiAgY29uc3QgZ29vZ2xlVXNlcklkID0gYXdhaXQgZ2V0R29vZ2xlSWRGcm9tRmlyZWJhc2VVaWQodXNlcklkKTtcbiAgY29uc29sZS5sb2coYFtnZXRVc2VyR3JvdXBzXSBGZXRjaGVkIEdvb2dsZSBJRCAke2dvb2dsZVVzZXJJZH0gZm9yIEZpcmViYXNlIFVJRCAke3VzZXJJZH1gKTtcblxuICBjb25zdCBhdXRoID0gbmV3IEdvb2dsZUF1dGgoe1xuICAgIHNjb3BlczogWydodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2FkbWluLmRpcmVjdG9yeS5ncm91cC5yZWFkb25seSddLFxuICAgIGNsaWVudE9wdGlvbnM6IHtcbiAgICAgIHN1YmplY3Q6IGFkbWluRW1haWwsXG4gICAgfVxuICB9KTtcblxuICBjb25zdCBhZG1pbkNsaWVudCA9IGdvb2dsZS5hZG1pbih7XG4gICAgdmVyc2lvbjogJ2RpcmVjdG9yeV92MScsXG4gICAgYXV0aDogYXV0aCxcbiAgfSk7XG4gIFxuICBjb25zb2xlLmxvZyhgW2dldFVzZXJHcm91cHNdIEF1dGhlbnRpY2F0ZWQuIFJlcXVlc3RpbmcgZ3JvdXBzIGZvciBHb29nbGUgdXNlciBJRCAke2dvb2dsZVVzZXJJZH0gYnkgaW1wZXJzb25hdGluZyAke2FkbWluRW1haWx9YCk7XG4gIFxuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGFkbWluQ2xpZW50Lmdyb3Vwcy5saXN0KHtcbiAgICB1c2VyS2V5OiBnb29nbGVVc2VySWQsXG4gICAgbWF4UmVzdWx0czogMjAwLFxuICB9KTtcbiAgXG4gIGNvbnN0IGdyb3VwcyA9IHJlc3BvbnNlLmRhdGEuZ3JvdXBzO1xuXG4gIGlmICghZ3JvdXBzIHx8IGdyb3Vwcy5sZW5ndGggPT09IDApIHtcbiAgICBjb25zb2xlLmxvZyhgW2dldFVzZXJHcm91cHNdIE5vIGdyb3VwcyBmb3VuZCBmb3IgdXNlciBJRCAke3VzZXJJZH0uYCk7XG4gICAgcmV0dXJuIFtdO1xuICB9XG5cbiAgY29uc29sZS5sb2coYFtnZXRVc2VyR3JvdXBzXSBGb3VuZCAke2dyb3Vwcy5sZW5ndGh9IGdyb3VwcyBmb3IgdXNlciBJRCAke3VzZXJJZH0uYCk7XG5cbiAgY29uc3QgdmFsaWRhdGVkR3JvdXBzID0gR2V0VXNlckdyb3Vwc091dHB1dFNjaGVtYS5wYXJzZShcbiAgICBncm91cHMubWFwKGcgPT4gKHtcbiAgICAgIGlkOiBnLmVtYWlsIHx8IGcuaWQhLFxuICAgICAgbmFtZTogZy5uYW1lIHx8ICcnLFxuICAgICAgZGVzY3JpcHRpb246IGcuZGVzY3JpcHRpb24gfHwgdW5kZWZpbmVkLFxuICAgIH0pKVxuICApO1xuXG4gIGNvbnNvbGUubG9nKGBbZ2V0VXNlckdyb3Vwc10gU3VjY2Vzc2Z1bGx5IHZhbGlkYXRlZCBhbmQgbWFwcGVkICR7dmFsaWRhdGVkR3JvdXBzLmxlbmd0aH0gZ3JvdXBzLmApO1xuICByZXR1cm4gdmFsaWRhdGVkR3JvdXBzO1xufVxuIl0sIm5hbWVzIjpbImdldFVzZXJHcm91cHMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/google-groups-service.ts\n"));

/***/ })

});