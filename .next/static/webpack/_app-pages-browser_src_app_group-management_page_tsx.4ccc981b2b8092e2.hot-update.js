"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_src_app_group-management_page_tsx",{

/***/ "(app-pages-browser)/./src/services/google-groups-service.ts":
/*!***********************************************!*\
  !*** ./src/services/google-groups-service.ts ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getWorkspaceGroups: () => (/* binding */ getWorkspaceGroups)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-action-client-wrapper */ \"(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js\");\n/* harmony import */ var private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_action_entry_do_not_use__ {\"00755e7b5c3cf8ae55edcac8872ee995a1bef236e5\":\"getWorkspaceGroups\"} */ \nvar getWorkspaceGroups = /*#__PURE__*/ (0,private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.createServerReference)(\"00755e7b5c3cf8ae55edcac8872ee995a1bef236e5\", private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.callServer, void 0, private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.findSourceMapURL, \"getWorkspaceGroups\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9nb29nbGUtZ3JvdXBzLXNlcnZpY2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztJQTZCc0JBLG1DQUFBQSw2RkFBQUEsK0NBQUFBLDhFQUFBQSxVQUFBQSxvRkFBQUEiLCJzb3VyY2VzIjpbIi9ob21lL3VzZXIvc3R1ZGlvL3NyYy9zZXJ2aWNlcy9nb29nbGUtZ3JvdXBzLXNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzZXJ2ZXInO1xuLyoqXG4gKiBAZmlsZU92ZXJ2aWV3IEEgc2VydmljZSBmb3IgaW50ZXJhY3Rpbmcgd2l0aCB0aGUgR29vZ2xlIEFkbWluIFNESyB0byBtYW5hZ2UgZ3JvdXBzLlxuICpcbiAqIC0gZ2V0V29ya3NwYWNlR3JvdXBzIC0gQSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYWxsIGdyb3VwcyBmb3IgYSBHb29nbGUgV29ya3NwYWNlIGRvbWFpbi5cbiAqIC0gR2V0V29ya3NwYWNlR3JvdXBzT3V0cHV0IC0gVGhlIHJldHVybiB0eXBlIGZvciB0aGUgZ2V0V29ya3NwYWNlR3JvdXBzIGZ1bmN0aW9uIChhcnJheSBvZiBncm91cHMpLlxuICovXG5cbmltcG9ydCB7IHogfSBmcm9tICd6b2QnO1xuaW1wb3J0IHsgZ29vZ2xlIH0gZnJvbSAnZ29vZ2xlYXBpcyc7XG5pbXBvcnQgdHlwZSB7IFVzZXJHcm91cCB9IGZyb20gJ0AvbGliL3R5cGVzJztcbmltcG9ydCB7IEdvb2dsZUF1dGggfSBmcm9tICdnb29nbGUtYXV0aC1saWJyYXJ5JztcbmltcG9ydCB7IGdldEFkbWluRW1haWxFbnYgfSBmcm9tICcuL2NvbmZpZy1zZXJ2aWNlJztcblxuY29uc3QgVXNlckdyb3VwU2NoZW1hID0gei5vYmplY3Qoe1xuICBpZDogei5zdHJpbmcoKS5kZXNjcmliZShcIlRoZSBncm91cCdzIHByaW1hcnkgZW1haWwgYWRkcmVzcyBvciB1bmlxdWUgSUQuXCIpLFxuICBuYW1lOiB6LnN0cmluZygpLmRlc2NyaWJlKFwiVGhlIGRpc3BsYXkgbmFtZSBvZiB0aGUgZ3JvdXAuXCIpLFxuICBkZXNjcmlwdGlvbjogei5zdHJpbmcoKS5vcHRpb25hbCgpLmRlc2NyaWJlKFwiQSBicmllZiBkZXNjcmlwdGlvbiBvZiB0aGUgZ3JvdXAuXCIpLFxuICB1c2VySWRzOiB6LmFycmF5KHouc3RyaW5nKCkpLm9wdGlvbmFsKCkuZGVzY3JpYmUoJ0FuIGFycmF5IG9mIHVzZXIgSURzIGJlbG9uZ2luZyB0byB0aGUgZ3JvdXAuJyksXG59KTtcblxuLy8gVGhlIHJldHVybiB2YWx1ZSBpcyBhbiBhcnJheSBvZiBncm91cHNcbmNvbnN0IEdldFdvcmtzcGFjZUdyb3Vwc091dHB1dFNjaGVtYSA9IHouYXJyYXkoVXNlckdyb3VwU2NoZW1hKTtcbmV4cG9ydCB0eXBlIEdldFdvcmtzcGFjZUdyb3Vwc091dHB1dCA9IHouaW5mZXI8dHlwZW9mIEdldFdvcmtzcGFjZUdyb3Vwc091dHB1dFNjaGVtYT47XG5cbi8qKlxuICogUmV0cmlldmVzIGFsbCBncm91cHMgZnJvbSBhIEdvb2dsZSBXb3Jrc3BhY2UgZG9tYWluLlxuICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gYW4gYXJyYXkgb2YgZ3JvdXBzLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0V29ya3NwYWNlR3JvdXBzKCk6IFByb21pc2U8R2V0V29ya3NwYWNlR3JvdXBzT3V0cHV0PiB7XG4gIGNvbnNvbGUubG9nKGBbZ2V0V29ya3NwYWNlR3JvdXBzXSBTdGFydGluZyBncm91cCByZXRyaWV2YWwgZm9yIHRoZSBlbnRpcmUgZG9tYWluLmApO1xuXG4gIGNvbnN0IGFkbWluRW1haWwgPSBhd2FpdCBnZXRBZG1pbkVtYWlsRW52KCk7XG4gIGlmICghYWRtaW5FbWFpbCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkxhIHZhcmlhYmxlIGQnZW50b3JuIEdTVUlURV9BRE1JTl9FTUFJTCBubyBlc3TDoCBkZWZpbmlkYSBvIG5vIMOpcyBhY2Nlc3NpYmxlLiBBcXVlc3RhIHZhcmlhYmxlIGhhIGRlIGNvbnRlbmlyIGwnZW1haWwgZCd1biBhZG1pbmlzdHJhZG9yIGRlIEdvb2dsZSBXb3Jrc3BhY2UgcGVyIGEgcG9kZXIgc3VwbGFudGFyIGxhIGlkZW50aXRhdC5cIik7XG4gIH1cbiAgY29uc3QgZG9tYWluID0gYWRtaW5FbWFpbC5zcGxpdCgnQCcpWzFdO1xuICBjb25zb2xlLmxvZyhgW2dldFdvcmtzcGFjZUdyb3Vwc10gVXNpbmcgYWRtaW4gZW1haWwgJyR7YWRtaW5FbWFpbH0nIGFuZCBkZXJpdmVkIGRvbWFpbiAnJHtkb21haW59Jy5gKTtcblxuICB0cnkge1xuICAgIGNvbnN0IGF1dGggPSBuZXcgR29vZ2xlQXV0aCh7XG4gICAgICBzY29wZXM6IFsnaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9hZG1pbi5kaXJlY3RvcnkuZ3JvdXAucmVhZG9ubHknXSxcbiAgICAgIGNsaWVudE9wdGlvbnM6IHtcbiAgICAgICAgc3ViamVjdDogYWRtaW5FbWFpbCxcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGNvbnN0IGFkbWluQ2xpZW50ID0gZ29vZ2xlLmFkbWluKHtcbiAgICAgIHZlcnNpb246ICdkaXJlY3RvcnlfdjEnLFxuICAgICAgYXV0aDogYXV0aCxcbiAgICB9KTtcbiAgICBcbiAgICBjb25zb2xlLmxvZyhgW2dldFdvcmtzcGFjZUdyb3Vwc10gQXV0aGVudGljYXRlZC4gUmVxdWVzdGluZyBhbGwgZ3JvdXBzIGZvciBkb21haW4gJyR7ZG9tYWlufScgYnkgaW1wZXJzb25hdGluZyAnJHthZG1pbkVtYWlsfSdgKTtcbiAgICBcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGFkbWluQ2xpZW50Lmdyb3Vwcy5saXN0KHtcbiAgICAgIGRvbWFpbjogZG9tYWluLFxuICAgICAgbWF4UmVzdWx0czogMjAwLCAvLyBZb3UgbWlnaHQgbmVlZCB0byBoYW5kbGUgcGFnaW5hdGlvbiBmb3IgbW9yZSB0aGFuIDIwMCBncm91cHNcbiAgICB9KTtcbiAgICBcbiAgICBjb25zdCBncm91cHMgPSByZXNwb25zZS5kYXRhLmdyb3VwcztcblxuICAgIGlmICghZ3JvdXBzIHx8IGdyb3Vwcy5sZW5ndGggPT09IDApIHtcbiAgICAgIGNvbnNvbGUubG9nKGBbZ2V0V29ya3NwYWNlR3JvdXBzXSBObyBncm91cHMgZm91bmQgZm9yIGRvbWFpbiAnJHtkb21haW59Jy5gKTtcbiAgICAgIHJldHVybiBbXTtcbiAgICB9XG5cbiAgICBjb25zb2xlLmxvZyhgW2dldFdvcmtzcGFjZUdyb3Vwc10gRm91bmQgJHtncm91cHMubGVuZ3RofSBncm91cHMgZm9yIGRvbWFpbiAnJHtkb21haW59Jy5gKTtcblxuICAgIGNvbnN0IHZhbGlkYXRlZEdyb3VwcyA9IEdldFdvcmtzcGFjZUdyb3Vwc091dHB1dFNjaGVtYS5wYXJzZShcbiAgICAgIGdyb3Vwcy5tYXAoZyA9PiAoe1xuICAgICAgICBpZDogZy5lbWFpbCB8fCBnLmlkISxcbiAgICAgICAgbmFtZTogZy5uYW1lIHx8ICcnLFxuICAgICAgICBkZXNjcmlwdGlvbjogZy5kZXNjcmlwdGlvbiB8fCB1bmRlZmluZWQsXG4gICAgICB9KSlcbiAgICApO1xuXG4gICAgY29uc29sZS5sb2coYFtnZXRXb3Jrc3BhY2VHcm91cHNdIFN1Y2Nlc3NmdWxseSB2YWxpZGF0ZWQgYW5kIG1hcHBlZCAke3ZhbGlkYXRlZEdyb3Vwcy5sZW5ndGh9IGdyb3Vwcy5gKTtcbiAgICByZXR1cm4gdmFsaWRhdGVkR3JvdXBzO1xuXG4gIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoYFtnZXRXb3Jrc3BhY2VHcm91cHNdIEVycm9yIGZldGNoaW5nIGdyb3VwcyBmb3IgZG9tYWluICcke2RvbWFpbn0nOmAsIGVycm9yKTtcbiAgICAgIFxuICAgICAgaWYgKGVycm9yLmNvZGUgPT09IDQwMykge1xuICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJBY2PDqXMgZGVuZWdhdCAoNDAzIEZvcmJpZGRlbikuIENhdXNhIHByb2JhYmxlOiBFbCBDb21wdGUgZGUgU2VydmVpIG5vIHTDqSBlbHMgcGVybWlzb3MgZGUgJ0RvbWFpbi1XaWRlIERlbGVnYXRpb24nIGNvcnJlY3RlcyBvIGwnQVBJIGQnQWRtaW4gU0RLIG5vIGVzdMOgIGhhYmlsaXRhZGEuXCIpO1xuICAgICAgfSBlbHNlIGlmIChlcnJvci5jb2RlID09PSA0MDQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEVsIGRvbWluaSAnJHtkb21haW59JyBubyBzJ2hhIHRyb2JhdCBhIEdvb2dsZSBXb3Jrc3BhY2UuYCk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIHRocm93IG5ldyBFcnJvcihgUydoYSBwcm9kdcOvdCB1biBlcnJvciBpbmVzcGVyYXQgZW4gY29ubmVjdGFyIGFtYiBsJ0FQSSBkZSBHb29nbGUgV29ya3NwYWNlOiAke2Vycm9yLm1lc3NhZ2V9YCk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJnZXRXb3Jrc3BhY2VHcm91cHMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/google-groups-service.ts\n"));

/***/ })

});