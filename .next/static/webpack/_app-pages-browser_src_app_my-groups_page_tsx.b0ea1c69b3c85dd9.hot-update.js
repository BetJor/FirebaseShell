"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_src_app_my-groups_page_tsx",{

/***/ "(app-pages-browser)/./src/services/google-groups-service.ts":
/*!***********************************************!*\
  !*** ./src/services/google-groups-service.ts ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getWorkspaceGroups: () => (/* binding */ getWorkspaceGroups)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-action-client-wrapper */ \"(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js\");\n/* harmony import */ var private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_action_entry_do_not_use__ {\"00755e7b5c3cf8ae55edcac8872ee995a1bef236e5\":\"getWorkspaceGroups\"} */ \nvar getWorkspaceGroups = /*#__PURE__*/ (0,private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.createServerReference)(\"00755e7b5c3cf8ae55edcac8872ee995a1bef236e5\", private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.callServer, void 0, private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.findSourceMapURL, \"getWorkspaceGroups\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9nb29nbGUtZ3JvdXBzLXNlcnZpY2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztJQXVEc0JBLG1DQUFBQSw2RkFBQUEsK0NBQUFBLDhFQUFBQSxVQUFBQSxvRkFBQUEiLCJzb3VyY2VzIjpbIi9ob21lL3VzZXIvc3R1ZGlvL3NyYy9zZXJ2aWNlcy9nb29nbGUtZ3JvdXBzLXNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiXG4ndXNlIHNlcnZlcic7XG4vKipcbiAqIEBmaWxlT3ZlcnZpZXcgQSBzZXJ2aWNlIGZvciBpbnRlcmFjdGluZyB3aXRoIHRoZSBHb29nbGUgQWRtaW4gU0RLIHRvIG1hbmFnZSBncm91cHMuXG4gKlxuICogLSBnZXRXb3Jrc3BhY2VHcm91cHMgLSBBIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhbGwgZ3JvdXBzIGZvciBhIEdvb2dsZSBXb3Jrc3BhY2UgZG9tYWluLlxuICogLSBHZXRXb3Jrc3BhY2VHcm91cHNPdXRwdXQgLSBUaGUgcmV0dXJuIHR5cGUgZm9yIHRoZSBnZXRXb3Jrc3BhY2VHcm91cHMgZnVuY3Rpb24gKGFycmF5IG9mIGdyb3VwcykuXG4gKi9cblxuaW1wb3J0IHsgeiB9IGZyb20gJ3pvZCc7XG5pbXBvcnQgeyBnb29nbGUgfSBmcm9tICdnb29nbGVhcGlzJztcbmltcG9ydCB0eXBlIHsgVXNlckdyb3VwIH0gZnJvbSAnQC9saWIvdHlwZXMnO1xuaW1wb3J0IHsgR29vZ2xlQXV0aCB9IGZyb20gJ2dvb2dsZS1hdXRoLWxpYnJhcnknO1xuaW1wb3J0IHsgZ2V0QWRtaW5FbWFpbEVudiB9IGZyb20gJy4vY29uZmlnLXNlcnZpY2UnO1xuaW1wb3J0IGFkbWluIGZyb20gJ2ZpcmViYXNlLWFkbWluJztcblxuLy8gSW5pdGlhbGl6ZSBGaXJlYmFzZSBBZG1pbiBTREsgaWYgbm90IGFscmVhZHkgaW5pdGlhbGl6ZWRcbmlmICghYWRtaW4uYXBwcy5sZW5ndGgpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBzZXJ2aWNlQWNjb3VudEtleSA9IHByb2Nlc3MuZW52LkdPT0dMRV9BUFBMSUNBVElPTl9DUkVERU5USUFMU1xuICAgICAgPyBKU09OLnBhcnNlKFxuICAgICAgICAgIHJlcXVpcmUoJ2ZzJykucmVhZEZpbGVTeW5jKHByb2Nlc3MuZW52LkdPT0dMRV9BUFBMSUNBVElPTl9DUkVERU5USUFMUywgJ3V0ZjgnKVxuICAgICAgICApXG4gICAgICA6IHVuZGVmaW5lZDtcblxuICAgIGlmIChzZXJ2aWNlQWNjb3VudEtleSkge1xuICAgICAgYWRtaW4uaW5pdGlhbGl6ZUFwcCh7XG4gICAgICAgIGNyZWRlbnRpYWw6IGFkbWluLmNyZWRlbnRpYWwuY2VydChzZXJ2aWNlQWNjb3VudEtleSksXG4gICAgICB9KTtcbiAgICAgIGNvbnNvbGUubG9nKCdbZ29vZ2xlLWdyb3Vwcy1zZXJ2aWNlXSBGaXJlYmFzZSBBZG1pbiBTREsgaW5pdGlhbGl6ZWQgc3VjY2Vzc2Z1bGx5IHdpdGggc2VydmljZSBhY2NvdW50IGtleS4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgIGFkbWluLmluaXRpYWxpemVBcHAoe1xuICAgICAgICBjcmVkZW50aWFsOiBhZG1pbi5jcmVkZW50aWFsLmFwcGxpY2F0aW9uRGVmYXVsdCgpXG4gICAgICAgfSk7XG4gICAgICAgY29uc29sZS5sb2coJ1tnb29nbGUtZ3JvdXBzLXNlcnZpY2VdIEZpcmViYXNlIEFkbWluIFNESyBpbml0aWFsaXplZCBzdWNjZXNzZnVsbHkgd2l0aCBhcHBsaWNhdGlvbiBkZWZhdWx0IGNyZWRlbnRpYWxzLicpO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1tnb29nbGUtZ3JvdXBzLXNlcnZpY2VdIEZpcmViYXNlIEFkbWluIFNESyBpbml0aWFsaXphdGlvbiBlcnJvcjonLCBlcnJvci5tZXNzYWdlKTtcbiAgfVxufVxuXG5jb25zdCBVc2VyR3JvdXBTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIGlkOiB6LnN0cmluZygpLmRlc2NyaWJlKFwiVGhlIGdyb3VwJ3MgcHJpbWFyeSBlbWFpbCBhZGRyZXNzIG9yIHVuaXF1ZSBJRC5cIiksXG4gIG5hbWU6IHouc3RyaW5nKCkuZGVzY3JpYmUoXCJUaGUgZGlzcGxheSBuYW1lIG9mIHRoZSBncm91cC5cIiksXG4gIGRlc2NyaXB0aW9uOiB6LnN0cmluZygpLm9wdGlvbmFsKCkuZGVzY3JpYmUoXCJBIGJyaWVmIGRlc2NyaXB0aW9uIG9mIHRoZSBncm91cC5cIiksXG4gIHVzZXJJZHM6IHouYXJyYXkoei5zdHJpbmcoKSkub3B0aW9uYWwoKS5kZXNjcmliZSgnQW4gYXJyYXkgb2YgdXNlciBJRHMgYmVsb25naW5nIHRvIHRoZSBncm91cC4nKSxcbn0pO1xuXG5jb25zdCBHZXRXb3Jrc3BhY2VHcm91cHNPdXRwdXRTY2hlbWEgPSB6LmFycmF5KFVzZXJHcm91cFNjaGVtYSk7XG5leHBvcnQgdHlwZSBHZXRXb3Jrc3BhY2VHcm91cHNPdXRwdXQgPSB6LmluZmVyPHR5cGVvZiBHZXRXb3Jrc3BhY2VHcm91cHNPdXRwdXRTY2hlbWE+O1xuXG4vKipcbiAqIFJldHJpZXZlcyBhbGwgZ3JvdXBzIGZyb20gYSBHb29nbGUgV29ya3NwYWNlIGRvbWFpbiwgaGFuZGxpbmcgcGFnaW5hdGlvbi5cbiAqIEByZXR1cm5zIEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIGFuIGFycmF5IG9mIGFsbCBncm91cHMgaW4gdGhlIGRvbWFpbi5cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFdvcmtzcGFjZUdyb3VwcygpOiBQcm9taXNlPEdldFdvcmtzcGFjZUdyb3Vwc091dHB1dD4ge1xuICBjb25zb2xlLmxvZyhgW2dldFdvcmtzcGFjZUdyb3Vwc10gU3RhcnRpbmcgZ3JvdXAgcmV0cmlldmFsIGZvciB0aGUgZW50aXJlIGRvbWFpbi5gKTtcblxuICBjb25zdCBhZG1pbkVtYWlsID0gYXdhaXQgZ2V0QWRtaW5FbWFpbEVudigpO1xuICBpZiAoIWFkbWluRW1haWwpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJMYSB2YXJpYWJsZSBkJ2VudG9ybiBHU1VJVEVfQURNSU5fRU1BSUwgbm8gZXN0w6AgZGVmaW5pZGEgbyBubyDDqXMgYWNjZXNzaWJsZS4gQXF1ZXN0YSB2YXJpYWJsZSBoYSBkZSBjb250ZW5pciBsJ2VtYWlsIGQndW4gYWRtaW5pc3RyYWRvciBkZSBHb29nbGUgV29ya3NwYWNlIHBlciBhIHBvZGVyIHN1cGxhbnRhciBsYSBpZGVudGl0YXQuXCIpO1xuICB9XG4gIGNvbnN0IGRvbWFpbiA9IGFkbWluRW1haWwuc3BsaXQoJ0AnKVsxXTtcbiAgY29uc29sZS5sb2coYFtnZXRXb3Jrc3BhY2VHcm91cHNdIFVzaW5nIGFkbWluIGVtYWlsICcke2FkbWluRW1haWx9JyBhbmQgZGVyaXZlZCBkb21haW4gJyR7ZG9tYWlufScuYCk7XG5cbiAgdHJ5IHtcbiAgICBjb25zdCBhdXRoID0gbmV3IEdvb2dsZUF1dGgoe1xuICAgICAgc2NvcGVzOiBbJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvYWRtaW4uZGlyZWN0b3J5Lmdyb3VwLnJlYWRvbmx5J10sXG4gICAgICBjbGllbnRPcHRpb25zOiB7XG4gICAgICAgIHN1YmplY3Q6IGFkbWluRW1haWwsXG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBjb25zdCBhZG1pbkNsaWVudCA9IGdvb2dsZS5hZG1pbih7XG4gICAgICB2ZXJzaW9uOiAnZGlyZWN0b3J5X3YxJyxcbiAgICAgIGF1dGg6IGF1dGgsXG4gICAgfSk7XG4gICAgXG4gICAgY29uc29sZS5sb2coYFtnZXRXb3Jrc3BhY2VHcm91cHNdIEF1dGhlbnRpY2F0ZWQuIFJlcXVlc3RpbmcgYWxsIGdyb3VwcyBmb3IgZG9tYWluICcke2RvbWFpbn0nIGJ5IGltcGVyc29uYXRpbmcgJyR7YWRtaW5FbWFpbH0nYCk7XG4gICAgXG4gICAgbGV0IGFsbEdyb3VwczogYW55W10gPSBbXTtcbiAgICBsZXQgcGFnZVRva2VuOiBzdHJpbmcgfCB1bmRlZmluZWQgPSB1bmRlZmluZWQ7XG5cbiAgICBkbyB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGFkbWluQ2xpZW50Lmdyb3Vwcy5saXN0KHtcbiAgICAgICAgZG9tYWluOiBkb21haW4sXG4gICAgICAgIG1heFJlc3VsdHM6IDIwMCxcbiAgICAgICAgcGFnZVRva2VuOiBwYWdlVG9rZW4sXG4gICAgICB9KTtcblxuICAgICAgY29uc3QgZ3JvdXBzID0gcmVzcG9uc2UuZGF0YS5ncm91cHM7XG4gICAgICBpZiAoZ3JvdXBzKSB7XG4gICAgICAgIGFsbEdyb3VwcyA9IGFsbEdyb3Vwcy5jb25jYXQoZ3JvdXBzKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgcGFnZVRva2VuID0gcmVzcG9uc2UuZGF0YS5uZXh0UGFnZVRva2VuIHx8IHVuZGVmaW5lZDtcblxuICAgIH0gd2hpbGUgKHBhZ2VUb2tlbik7XG5cblxuICAgIGlmIChhbGxHcm91cHMubGVuZ3RoID09PSAwKSB7XG4gICAgICBjb25zb2xlLmxvZyhgW2dldFdvcmtzcGFjZUdyb3Vwc10gTm8gZ3JvdXBzIGZvdW5kIGZvciBkb21haW4gJyR7ZG9tYWlufScuYCk7XG4gICAgICByZXR1cm4gW107XG4gICAgfVxuXG4gICAgY29uc29sZS5sb2coYFtnZXRXb3Jrc3BhY2VHcm91cHNdIEZvdW5kIGEgdG90YWwgb2YgJHthbGxHcm91cHMubGVuZ3RofSBncm91cHMgZm9yIGRvbWFpbiAnJHtkb21haW59JyBhZnRlciBoYW5kbGluZyBwYWdpbmF0aW9uLmApO1xuXG4gICAgY29uc3QgdmFsaWRhdGVkR3JvdXBzID0gR2V0V29ya3NwYWNlR3JvdXBzT3V0cHV0U2NoZW1hLnBhcnNlKFxuICAgICAgYWxsR3JvdXBzLm1hcChnID0+ICh7XG4gICAgICAgIGlkOiBnLmVtYWlsIHx8IGcuaWQhLFxuICAgICAgICBuYW1lOiBnLm5hbWUgfHwgJycsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBnLmRlc2NyaXB0aW9uIHx8IHVuZGVmaW5lZCxcbiAgICAgIH0pKVxuICAgICk7XG5cbiAgICBjb25zb2xlLmxvZyhgW2dldFdvcmtzcGFjZUdyb3Vwc10gU3VjY2Vzc2Z1bGx5IHZhbGlkYXRlZCBhbmQgbWFwcGVkICR7dmFsaWRhdGVkR3JvdXBzLmxlbmd0aH0gZ3JvdXBzLmApO1xuICAgIHJldHVybiB2YWxpZGF0ZWRHcm91cHM7XG5cbiAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgICAgY29uc29sZS5lcnJvcihgW2dldFdvcmtzcGFjZUdyb3Vwc10gRXJyb3IgZmV0Y2hpbmcgZ3JvdXBzIGZvciBkb21haW4gJyR7ZG9tYWlufSc6YCwgZXJyb3IpO1xuICAgICAgXG4gICAgICBpZiAoZXJyb3IuY29kZSA9PT0gNDAzKSB7XG4gICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkFjY8OpcyBkZW5lZ2F0ICg0MDMgRm9yYmlkZGVuKS4gQ2F1c2EgcHJvYmFibGU6IEVsIENvbXB0ZSBkZSBTZXJ2ZWkgbm8gdMOpIGVscyBwZXJtaXNvcyBkZSAnRG9tYWluLVdpZGUgRGVsZWdhdGlvbicgY29ycmVjdGVzIG8gbCdBUEkgZCdBZG1pbiBTREsgbm8gZXN0w6AgaGFiaWxpdGFkYS5cIik7XG4gICAgICB9IGVsc2UgaWYgKGVycm9yLmNvZGUgPT09IDQwNCkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgRWwgZG9taW5pICcke2RvbWFpbn0nIG5vIHMnaGEgdHJvYmF0IGEgR29vZ2xlIFdvcmtzcGFjZS5gKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBTJ2hhIHByb2R1w690IHVuIGVycm9yIGluZXNwZXJhdCBlbiBjb25uZWN0YXIgYW1iIGwnQVBJIGRlIEdvb2dsZSBXb3Jrc3BhY2U6ICR7ZXJyb3IubWVzc2FnZX1gKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbImdldFdvcmtzcGFjZUdyb3VwcyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/google-groups-service.ts\n"));

/***/ })

});