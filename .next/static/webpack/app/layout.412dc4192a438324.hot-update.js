"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/lib/data.ts":
/*!*************************!*\
  !*** ./src/lib/data.ts ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addGroup: () => (/* binding */ addGroup),\n/* harmony export */   addMasterDataItem: () => (/* binding */ addMasterDataItem),\n/* harmony export */   addUser: () => (/* binding */ addUser),\n/* harmony export */   createUser: () => (/* binding */ createUser),\n/* harmony export */   deleteGroup: () => (/* binding */ deleteGroup),\n/* harmony export */   deleteMasterDataItem: () => (/* binding */ deleteMasterDataItem),\n/* harmony export */   deleteUser: () => (/* binding */ deleteUser),\n/* harmony export */   getActionById: () => (/* binding */ getActionById),\n/* harmony export */   getActionTypes: () => (/* binding */ getActionTypes),\n/* harmony export */   getActions: () => (/* binding */ getActions),\n/* harmony export */   getAffectedAreas: () => (/* binding */ getAffectedAreas),\n/* harmony export */   getCategories: () => (/* binding */ getCategories),\n/* harmony export */   getGroups: () => (/* binding */ getGroups),\n/* harmony export */   getResponsibilityRoles: () => (/* binding */ getResponsibilityRoles),\n/* harmony export */   getSubcategories: () => (/* binding */ getSubcategories),\n/* harmony export */   getUserById: () => (/* binding */ getUserById),\n/* harmony export */   getUsers: () => (/* binding */ getUsers),\n/* harmony export */   getUsersFromFirestoreByEmail: () => (/* binding */ getUsersFromFirestoreByEmail),\n/* harmony export */   updateMasterDataItem: () => (/* binding */ updateMasterDataItem),\n/* harmony export */   updateUser: () => (/* binding */ updateUser)\n/* harmony export */ });\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./firebase */ \"(app-pages-browser)/./src/lib/firebase.ts\");\n\n\n// Funció per obtenir un usuari per ID\nasync function getUserById(userId) {\n    try {\n        const userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)((0,_firebase__WEBPACK_IMPORTED_MODULE_1__.useDb)(), 'users', userId);\n        const userSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDoc)(userRef);\n        if (userSnap.exists()) {\n            var _userData_createdAt, _userData_lastLogin;\n            const userData = userSnap.data();\n            // Transforma Timestamps de Firebase a objectes Date\n            const user = {\n                id: userSnap.id,\n                name: userData.name,\n                email: userData.email,\n                avatar: userData.avatar,\n                role: userData.role || 'User',\n                createdAt: (_userData_createdAt = userData.createdAt) === null || _userData_createdAt === void 0 ? void 0 : _userData_createdAt.toDate(),\n                lastLogin: (_userData_lastLogin = userData.lastLogin) === null || _userData_lastLogin === void 0 ? void 0 : _userData_lastLogin.toDate(),\n                dashboardLayout: userData.dashboardLayout || []\n            };\n            return user;\n        } else {\n            console.log('No such user!');\n            return null;\n        }\n    } catch (error) {\n        console.error('Error getting user by ID:', error);\n        throw new Error('Could not fetch user.');\n    }\n}\n// Funció per actualitzar un usuari\nasync function updateUser(userId, data) {\n    try {\n        const userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)((0,_firebase__WEBPACK_IMPORTED_MODULE_1__.useDb)(), 'users', userId);\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(userRef, data);\n    } catch (error) {\n        console.error('Error updating user:', error);\n        throw new Error('Could not update user.');\n    }\n}\n// Funció per crear un usuari (pot ser útil per al primer login)\nasync function createUser(userId, data) {\n    try {\n        const userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)((0,_firebase__WEBPACK_IMPORTED_MODULE_1__.useDb)(), 'users', userId);\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.setDoc)(userRef, {\n            ...data,\n            createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)(),\n            lastLogin: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n        });\n    } catch (error) {\n        console.error('Error creating user:', error);\n        throw new Error('Could not create user.');\n    }\n}\n// Funció per obtenir tots els usuaris\nasync function getUsers() {\n    const usersCol = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)((0,_firebase__WEBPACK_IMPORTED_MODULE_1__.useDb)(), 'users');\n    const usersSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(usersCol);\n    const usersList = usersSnap.docs.map((doc)=>{\n        var _data_createdAt, _data_lastLogin;\n        const data = doc.data();\n        return {\n            id: doc.id,\n            ...data,\n            createdAt: (_data_createdAt = data.createdAt) === null || _data_createdAt === void 0 ? void 0 : _data_createdAt.toDate(),\n            lastLogin: (_data_lastLogin = data.lastLogin) === null || _data_lastLogin === void 0 ? void 0 : _data_lastLogin.toDate()\n        };\n    });\n    return usersList;\n}\n// Funció per obtenir usuaris per una llista d'emails\nasync function getUsersFromFirestoreByEmail(emails) {\n    if (emails.length === 0) {\n        return [];\n    }\n    const usersRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)((0,_firebase__WEBPACK_IMPORTED_MODULE_1__.useDb)(), 'users');\n    // Firestore 'in' query is limited to 30 elements\n    const chunks = [];\n    for(let i = 0; i < emails.length; i += 30){\n        chunks.push(emails.slice(i, i + 30));\n    }\n    const userPromises = chunks.map(async (chunk)=>{\n        const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(usersRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('email', 'in', chunk));\n        const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n        return querySnapshot.docs.map((doc)=>({\n                id: doc.id,\n                ...doc.data()\n            }));\n    });\n    const chunkResults = await Promise.all(userPromises);\n    return chunkResults.flat();\n}\n// Funció per afegir un usuari (per a gestió manual)\nasync function addUser(data) {\n    const usersCol = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)((0,_firebase__WEBPACK_IMPORTED_MODULE_1__.useDb)(), 'users');\n    const docRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)(usersCol, {\n        ...data,\n        createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)(),\n        lastLogin: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n    });\n    return docRef.id;\n}\n// Funció per eliminar un usuari\nasync function deleteUser(userId) {\n    const userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)((0,_firebase__WEBPACK_IMPORTED_MODULE_1__.useDb)(), 'users', userId);\n    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.deleteDoc)(userRef);\n}\n// Funció per obtenir tots els grups\nasync function getGroups() {\n    const groupsCol = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)((0,_firebase__WEBPACK_IMPORTED_MODULE_1__.useDb)(), 'groups');\n    const groupsSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(groupsCol);\n    const groupsList = groupsSnap.docs.map((doc)=>{\n        const data = doc.data();\n        return {\n            id: doc.id,\n            name: data.name,\n            description: data.description,\n            userIds: data.userIds || []\n        };\n    });\n    return groupsList;\n}\n// Funció per afegir un grup\nasync function addGroup(data) {\n    // El ID del documento será el ID del grupo de Google\n    const groupRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)((0,_firebase__WEBPACK_IMPORTED_MODULE_1__.useDb)(), 'groups', data.id);\n    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.setDoc)(groupRef, {\n        ...data,\n        userIds: data.userIds || []\n    });\n}\n// Funció per eliminar un grup\nasync function deleteGroup(groupId) {\n    const groupRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)((0,_firebase__WEBPACK_IMPORTED_MODULE_1__.useDb)(), 'groups', groupId);\n    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.deleteDoc)(groupRef);\n}\n// Mock functions for master data - replace with actual Firestore implementation\nconst getMasterData = async (collectionName)=>{\n    const col = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)((0,_firebase__WEBPACK_IMPORTED_MODULE_1__.useDb)(), collectionName);\n    const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(col);\n    return snapshot.docs.map((doc)=>({\n            id: doc.id,\n            ...doc.data()\n        }));\n};\nconst getActionTypes = ()=>getMasterData('actionTypes');\nconst getCategories = ()=>getMasterData('categories');\nconst getSubcategories = ()=>getMasterData('subcategories');\nconst getAffectedAreas = ()=>getMasterData('affectedAreas');\nconst getResponsibilityRoles = ()=>getMasterData('responsibilityRoles');\nconst addMasterDataItem = async (collectionName, data)=>{\n    const col = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)((0,_firebase__WEBPACK_IMPORTED_MODULE_1__.useDb)(), collectionName);\n    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)(col, data);\n};\nconst updateMasterDataItem = async (collectionName, id, data)=>{\n    const itemRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)((0,_firebase__WEBPACK_IMPORTED_MODULE_1__.useDb)(), collectionName, id);\n    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(itemRef, data);\n};\nconst deleteMasterDataItem = async (collectionName, id)=>{\n    const itemRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)((0,_firebase__WEBPACK_IMPORTED_MODULE_1__.useDb)(), collectionName, id);\n    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.deleteDoc)(itemRef);\n};\nconst getActions = async ()=>{\n    const col = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)((0,_firebase__WEBPACK_IMPORTED_MODULE_1__.useDb)(), 'improvementActions');\n    const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(col);\n    return snapshot.docs.map((doc)=>({\n            id: doc.id,\n            ...doc.data()\n        }));\n};\nconst getActionById = async (id)=>{\n    const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)((0,_firebase__WEBPACK_IMPORTED_MODULE_1__.useDb)(), 'improvementActions', id);\n    const docSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDoc)(docRef);\n    if (docSnap.exists()) {\n        return {\n            id: docSnap.id,\n            ...docSnap.data()\n        };\n    }\n    return null;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/data.ts\n"));

/***/ })

});